package song.common.toolkit.db.orm;import song.common.db.DBClient;import song.common.db.DBConnectionConfig;import song.common.db.DBHelper;import song.common.db.DBType;import song.common.lang.ObjectHelper;import song.common.toolkit.db.orm.adapter.IDataAdapter;import song.common.toolkit.db.orm.adapter.ResultSetAdapter;import java.sql.ResultSet;import java.sql.SQLException;import java.util.ArrayList;import java.util.List;import java.util.Map;/** * description: * author:          song * createDate:      2017/10/29 */public class DBSession extends DBClient {    public DBSession(String configPath) throws Exception {        super(configPath);    }    public DBSession(DBType type, String url, String userName, String password) throws Exception {        super(type, url, userName, password);    }    public DBSession(DBConnectionConfig connectionConfig) throws Exception {        super(connectionConfig);    }    public List<Map<String, Object>> toListMap(String sql, List<Object> paramters) throws SQLException {        ResultSet resultSet = this.executeQuery(sql, paramters);        try {            IDataAdapter adapter = new ResultSetAdapter(resultSet);            return adapter.toListMap();        } finally {            DBHelper.closeResultSet(resultSet);        }    }    public <T> List<T> toList(Class<T> clazz, String sql, List<Object> paramters) throws Exception {        ResultSet resultSet = this.executeQuery(sql, paramters);        try {            IDataAdapter adapter = new ResultSetAdapter(resultSet);            return adapter.toList(clazz);        } finally {            DBHelper.closeResultSet(resultSet);        }    }    public List<String> toListString(String sql, List<Object> paramters) throws SQLException {        ResultSet resultSet = this.executeQuery(sql, paramters);        try {            IDataAdapter adapter = new ResultSetAdapter(resultSet);            return adapter.toListString();        } finally {            DBHelper.closeResultSet(resultSet);        }    }    public List<Object> toListObject(String sql, List<Object> paramters) throws SQLException {        ResultSet resultSet = this.executeQuery(sql, paramters);        try {            IDataAdapter adapter = new ResultSetAdapter(resultSet);            return adapter.toListObject();        } finally {            DBHelper.closeResultSet(resultSet);        }    }    public Object toObject(String sql, List<Object> paramters) throws SQLException {        ResultSet resultSet = this.executeQuery(sql, paramters);        try {            IDataAdapter adapter = new ResultSetAdapter(resultSet);            return adapter.toObject();        } finally {            DBHelper.closeResultSet(resultSet);        }    }}