package song.common.toolkit.exception;import org.springframework.http.HttpStatus;import org.springframework.web.bind.annotation.ExceptionHandler;import org.springframework.web.bind.annotation.ResponseBody;import org.springframework.web.bind.annotation.ResponseStatus;import song.common.exception.UnauthorizedException;import song.common.result.ActionResult;import song.common.result.ResultCode;import javax.servlet.http.HttpServletRequest;/** * description: * author:          song * createDate:      2018/4/17 */@ResponseBodypublic class RestExceptionHandler extends song.common.toolkit.exception.ExceptionHandler {    // 捕捉无权限异常    @ResponseStatus(HttpStatus.UNAUTHORIZED)    @ExceptionHandler(UnauthorizedException.class)    public ActionResult handle401(HttpServletRequest request,                                  Exception exception) {        //个性化操作，如写入日志        this.handle(request,exception);        return new ActionResult(false, ResultCode.unauthorized, "UnauthorizedException");    }    @ExceptionHandler(value = Exception.class)    public ActionResult allExceptionHandler(HttpServletRequest request,                                            Exception exception) throws Exception {        //个性化操作，如写入日志        this.handle(request,exception);        //返回异常json        ActionResult result = new ActionResult(false, getStatus(request), exception.getMessage());        return result;    }    private String getStatus(HttpServletRequest request) {        Integer statusCode = (Integer) request.getAttribute("javax.servlet.error.status_code");        if (statusCode == null) {            return ResultCode.error;        }        return statusCode.toString();    }    private String getStatus(HttpStatus status) {        int statusValue = status.value();        return String.valueOf(statusValue);    }    @Override    protected void handle(HttpServletRequest request, Exception exception) {    }}