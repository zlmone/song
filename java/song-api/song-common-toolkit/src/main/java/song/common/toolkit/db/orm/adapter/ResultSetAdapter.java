package song.common.toolkit.db.orm.adapter;import song.common.reflect.ClassHelper;import java.sql.ResultSet;import java.sql.ResultSetMetaData;import java.sql.SQLException;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;/** * description: * author:          song * createDate:      2017/10/29 */public class ResultSetAdapter implements IDataAdapter {    ResultSet resultSet;    public ResultSetAdapter(ResultSet resultSet) {        this.resultSet = resultSet;    }    /**     * 获取结果集所有列名     *     * @return     * @throws SQLException     */    protected List<String> getColumnNames() throws SQLException {        ResultSetMetaData metaData = resultSet.getMetaData();        int columnCount = metaData.getColumnCount();        //查找所有列        List<String> columnNames = new ArrayList<String>();        for (int i = 0; i < columnCount; i++) {            columnNames.add(metaData.getColumnName(i));        }        return columnNames;    }    public List<Map<String, Object>> toListMap() throws SQLException {        List<String> columnNames = getColumnNames();        List<Map<String, Object>> list = new ArrayList<Map<String, Object>>();        while (resultSet.next()) {            Map<String, Object> map = new HashMap<String, Object>();            for (int i = 0; i < columnNames.size(); i++) {                map.put(columnNames.get(i), resultSet.getObject(i));            }            list.add(map);        }        return list;    }    public <T> List<T> toList(Class<T> clazz) throws Exception {        List<String> columnNames = getColumnNames();        List<T> list = new ArrayList<T>();        while (resultSet.next()) {            T t = clazz.newInstance();            for (int i = 0; i < columnNames.size(); i++) {                ClassHelper.setField(clazz, t, columnNames.get(i), resultSet.getObject(i));            }            list.add(t);        }        return list;    }}