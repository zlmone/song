package song.common.io;import song.common.lang.ByteHelper;import song.common.lang.StringHelper;import song.common.util.BASE64Helper;import java.io.FileInputStream;import java.io.IOException;import java.io.InputStream;/** * description: * author:          song * createDate:      2017/10/9 */public class ImageHelper {    /**     * 将图片为base64编码字符串     *     * @param filePath     * @return     * @throws IOException     */    public static String toBASE64(String filePath) throws IOException {        return toBASE64(new FileInputStream(filePath));    }    /**     * 将图片流转为base64编码字符串     *     * @param stream     * @return     * @throws IOException     */    public static String toBASE64(InputStream stream) throws IOException {        byte[] bytes = StreamHelper.getBytes(stream);        if (!ByteHelper.isEmpty(bytes)) {            return BASE64Helper.encode(bytes);        }        return StringHelper.getEmpty();    }    public static String toBASE64Src(String filePath) throws IOException {        return buildSrc(FileHelper.getExtensionName(filePath), toBASE64(filePath));    }    public static String toBASE64Src(InputStream stream, String type) throws IOException {        return buildSrc(type, toBASE64(stream));    }    public static String buildSrc(String type, String base64String) {        return "pager:image/" + type + ";base64," + base64String;    }    /**     * 解析base64图片字符串，并自动识别图片类型     *     * @param base64String     * @return     * @throws IOException     */    public static FileInfo parseBASE64(String base64String) throws IOException {        //判断字符串是否有图片标识前缀        if (!StringHelper.isEmpty(base64String)) {            int splitIndex = base64String.indexOf(",");            FileInfo fileInfo = new FileInfo();            if (splitIndex > -1) {                String prefix = base64String.substring(0, splitIndex);                String suffix = StringHelper.trimStart(prefix.split(";")[0], "pager:image/");                fileInfo.setExtension("." + suffix);                base64String = base64String.substring(splitIndex + 1);            }            fileInfo.setBytes(BASE64Helper.decode(base64String));            fileInfo.setSize(fileInfo.getBytes().length);            return fileInfo;        }        return null;    }    /**     * 保存base64图片字符串，如果自动识别图片类型成功，则自动替换保存路径的文件扩展名     *     * @param base64String     * @param saveFilePath     * @return 保存成功则返回文件路径，保存失败返回null     * @throws IOException     */    public static String saveBASE64(String base64String, String saveFilePath) throws IOException {        FileInfo fileInfo = parseBASE64(base64String);        if (fileInfo != null) {            //如果解析成功，则判断是否成功解析文件类型，无法识别类型，则默认以保存的文件类型为准            String autoExtension = fileInfo.getExtension();            if (!StringHelper.isEmpty(autoExtension)) {                saveFilePath = saveFilePath.replace(FileHelper.getExtension(saveFilePath), autoExtension);            }            FileHelper.write(fileInfo.getBytes(), saveFilePath);            return saveFilePath;        }        return null;    }    //裁剪，加水印等待实现    //http://blog.csdn.net/zhangliao613/article/details/50624210    //http://blog.csdn.net/bestlove12345/article/details/527768110   /* public static void main(String[] args) {        String saveFilePath = "D:\\a.jpg";        String base64 = "pager:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAACP0lEQVQ4jVWSS0jUYRTFf983M5qmMw4+UYsS0zAKKjdimkHgogcRNIGryijJRZs2UW1sWRIJQZBBbazcRGZCZA9FKoOCGlTMkbSHOj4QZ3TGceb/3RbzN+iuLpfDPffcc5QxIoLWGAFBa5JljN2LIIJS9lwrhVLIOvrhR5oe8XMRrQnM8uwrRlAKsfE4kwssg9KMTtP6mpklcjNo3s+5DoamuVzPxQM2iQj2BS4nTs1MCCMUeFiK0DvCr0WKvfSOEk+AILLOoBQPPhCNU19BVhr+KXYW4U5jeY3IGg2VpLhsVUrhVIr+MVp6iMQRaDvBQICz1awlOL+PNCfVJVzvoaaUujIsgxKRO320vSMjlfJ8Ok4DDE2RvZECD4Cvnb4xCj10NlKahxahLI9Ygt+LVBQgwoXH+O5z9C4v/FiGYJiSHKIJxudRCqcIB7dz4xjzKzTVcPstL4fJcxOJcaWLLTmU5tL1jUIPW7MRQf0zDmjt5epzWg4TXePee7zpZKbScoRgiOIsardhDMoyghBLcOkpgVlOVbG7mL7vjAQZnOTQDgYnuHmc8nwSFg6NNoLWdH6h20+bj1cjfJokz01dGaEoDZWEVvG1M7GAQyeNE0Tw/8G9gRQHc2EcihQH3nR2FWEZMlMJxxieRilM0mml2LOZqSWuddNYTU4GTz4zMM6ZKgLzzC2jFUVZICiFMkaA1Ti33tAfwOXAm84mLysxfiwQDJPi4ORemmvtFP73JcsAONYTblksRnFpPOl2kIC/BsEA9PPta4oAAAAASUVORK5CYII=";        try {            saveFilePath= ImageHelper.saveBASE64(base64, saveFilePath);            String base64String = ImageHelper.toBASE64Src(saveFilePath);            System.out.println(base64String);        } catch (IOException e) {            e.printStackTrace();        }    }*/}