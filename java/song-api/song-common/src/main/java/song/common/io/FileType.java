package song.common.io;import song.common.lang.ArrayHelper;/** * description: * author:          song * createDate:      2017/10/31 */public enum FileType {    excel("xls", "xlsx"),    word("doc", "docx"),    ppt("ppt", "pptx"),    image("jpg", "jpeg", "png", "gif", "bmp", "tiff", "ico"),    txt("txt"),    pdf("pdf"),    html("htm", "html", "css", "js"),    flash("swf", "fla", "as"),    design("rp", "dwg", "psd", "cdr", "dxf", "dxb", "col", "ai", "eps"),    config("xml", "song/common/config", "sitemap", "cfg", "ini", "properties", "iml", "mf"),    dotnet("aspx", "cshtml", "cs", "ashx", "asp", "xaml", "ascx", "master", "asmx", "asax", "rpt", "xsd", "resx", "dll"),    java("java", "jsp", "jar", "class", "war"),    compress("zip", "rar", "7z", "gzip", "tar", "gz"),    db("song/common/db", "sql", "mdf", "accdb", "mdb", "ldf", "sdf"),    binary("bin", "obj"),    execute("exe", "bat", "msi", "iso", "apk", "com", "sh"),    bt("bt", "torrent"),    video("mp4", "rm", "rmvb", "avi", "flv", "mkv", "mov", "mpeg", "mpg", "qt", "ram", "viv", "wmv", "asf", "wm", "wmp", "rpm", "dat", "amv", "m3u8"),    voice("mp3", "wma", "aif", "aiff", "amr", "mp5", "mpa", "ogg", "wav", "mid", "mpc"),    uml("vsd", "vsdx", "pdm", "oom", "pdb", "cdm", "bpm", "pam", "mmap", "xmind"),    other("", "*");    private String[] extensions;    FileType(String... extensionNames) {        this.extensions = new String[extensionNames.length];        for (int i = 0; i < extensionNames.length; i++) {            this.extensions[i] = extensionNames[i];        }    }    /**     * 将扩展名解析为文件类型     *     * @param extensionName     * @return     */    public static FileType parse(String extensionName) {        FileType[] fileTypes = values();        for (FileType fileType : fileTypes) {            if (ArrayHelper.contains(extensionName, fileType.getExtensions())) {                return fileType;            }        }        return FileType.other;    }    public String[] getExtensions() {        return extensions;    }    /**     * 判断扩展名是否存在于文件类型     *     * @param extensionName     * @return     */    public boolean contains(String extensionName) {        return ArrayHelper.contains(extensionName, extensions);    }}