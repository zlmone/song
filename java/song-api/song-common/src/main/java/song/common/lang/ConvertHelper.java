package song.common.lang;import java.math.BigDecimal;/** * description:     ConvertHelper * author:          song * createDate:      2017/9/27 */public class ConvertHelper {    public static int toInt(String s, int defaultValue) {        if (StringHelper.isEmpty(s)) {            return defaultValue;        }        try {            return Integer.parseInt(s);        } catch (NumberFormatException e) {            e.printStackTrace();            return defaultValue;        }    }    public static int toInt(String s) {        return toInt(s, 0);    }    public static float toFloat(String s, float defaultValue) {        if (StringHelper.isEmpty(s)) {            return defaultValue;        }        try {            return Float.parseFloat(s);        } catch (NumberFormatException e) {            e.printStackTrace();            return defaultValue;        }    }    public static float toFloat(String s) {        return toFloat(s, 0.0f);    }    public static double toDouble(String s, double defaultValue) {        if (StringHelper.isEmpty(s)) {            return defaultValue;        }        try {            return Double.parseDouble(s);        } catch (NumberFormatException e) {            e.printStackTrace();            return defaultValue;        }    }    public static double toDouble(String s) {        return toDouble(s, 0.0);    }    public static boolean toBool(String s, boolean defaultValue) {        if (StringHelper.isEmpty(s)) {            return defaultValue;        }        try {            return Boolean.parseBoolean(s);        } catch (NumberFormatException e) {            e.printStackTrace();            return defaultValue;        }    }    public static boolean toBool(String s) {        return toBool(s, false);    }    public static BigDecimal toDecimal(String s, String defaultValue) {        return new BigDecimal(StringHelper.isEmpty(s) ? defaultValue : s);    }    public static BigDecimal toDecimal(String s) {        return toDecimal(s, "0");    }    /**     * 将字符串解析为boolean类型，解析失败则返回默认值     *     * @param s     * @param defaultValue     * @return     */    public static boolean similarBool(String s, boolean defaultValue) {        if (StringHelper.isEmpty(s)) {            return defaultValue;        }        String val = s.toLowerCase();        if (val.equals("true") || val.equals("1") || val.equals("y") || val.equals("yes") || val.equals("ok")) {            return true;        }        return false;    }    /**     * 将字符串解析为boolean类型，解析失败则返回false     *     * @param s     * @return     */    public static boolean similarBool(String s) {        return similarBool(s, false);    }}