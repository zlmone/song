package song.api.studio.controller;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import song.api.studio.builder.transform.DbModelTransform;import song.api.studio.builder.transform.PdmModelTransform;import song.api.studio.model.Connection;import song.api.studio.model.Table;import song.api.studio.service.impl.ConnectionService;import song.api.studio.service.impl.ProjectService;import song.api.studio.service.impl.TableService;import song.common.io.FileHelper;import song.common.result.ActionResult;import song.common.toolkit.base.BaseController;import song.common.ui.iview.IVTreeNode;import song.common.ui.tree.TreeNode;import java.util.ArrayList;import java.util.List;/** * description: * author:          song * createDate:      2018/11/26 */@RestController@RequestMapping("/model")public class ModelController extends BaseController {    @Autowired    private ConnectionService connectionService;    @Autowired    private TableService tableService;    @Autowired    private ProjectService projectService;    @GetMapping(value = "/read")    public ActionResult dbTables(String projectId,String projectName) throws Exception {        List<IVTreeNode> tree = new ArrayList<>();        //创建根节点        IVTreeNode root=new IVTreeNode("project",projectName,projectId,true);        //创建表结构,视图，存过        IVTreeNode tablesNode = new IVTreeNode("tables","表集合",true);        IVTreeNode viewsNode = new IVTreeNode("views","视图",true);        IVTreeNode proceduresNode = new IVTreeNode("procedures","存储过程",true);        //读取表数据        List<Table> tables = tableService.getList(projectId);        tables.forEach(item->{            IVTreeNode tableNode = new IVTreeNode("table",item.getTableName(),item.getId(),true);            tablesNode.addChildren(tableNode);        });        root.addChildren(tablesNode);        root.addChildren(viewsNode);        root.addChildren(proceduresNode);        tree.add(root);        return success(tree);    }}