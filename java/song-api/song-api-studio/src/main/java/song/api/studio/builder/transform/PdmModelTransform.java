package song.api.studio.builder.transform;import song.common.db.PrimaryKeyType;import song.common.toolkit.pdm.PdmColumn;import song.common.toolkit.pdm.PdmParser;import song.common.toolkit.pdm.PdmTable;import song.api.studio.builder.mapping.DataTypeMapping;import song.api.studio.model.Column;import song.api.studio.model.Table;import java.util.ArrayList;import java.util.List;/** * description: * author:          song * createDate:      2017/10/25 */public class PdmModelTransform extends ModelTransform {    private PdmParser parser;    public PdmModelTransform(String filePath) throws Exception {        parser = new PdmParser(filePath);        this.setDbType(parser.getDBType());    }    /**     * 将pdm结构转换为生成器模型     *     * @return     */    public List<Table> getTables() {        List<Table> tables = new ArrayList<Table>();        List<PdmTable> pdmTables = parser.parse();        for (PdmTable pdmTable : pdmTables) {            Table table = new Table();            table.setId(pdmTable.getObjectID());            table.setTableCode(pdmTable.getCode());            table.setTableName(pdmTable.getName());            table.setComment(pdmTable.getComment());            table.setColumns(parseColumns(pdmTable.getColumns(), table));            tables.add(table);        }        return tables;    }    /**     * 将pdm字段结构转换为生成器模型     *     * @param pdmColumns     * @param table     * @return     */    private List<Column> parseColumns(List<PdmColumn> pdmColumns, Table table) {        List<Column> columns = new ArrayList<Column>();        for (PdmColumn pdmColumn : pdmColumns) {            Column column = new Column();            column.setTableId(table.getId());            column.setId(pdmColumn.getObjectID());            column.setField(pdmColumn.getCode());            column.setDisplay(pdmColumn.getName());            column.setDBDataType(pdmColumn.getDataType());            column.setLength(pdmColumn.getLength());            column.setRequired(!pdmColumn.isMandatory());            column.setComment(pdmColumn.getComment());            column.setDataType(DataTypeMapping.getDataType(dbType.getName(), column.getDBDataType()));            if (pdmColumn.isIdentity()) {                table.setPrimaryKeyType(PrimaryKeyType.IdEntity);            }            if (pdmColumn.isPrimaryKey()) {                column.setPrimaryKey(true);                table.setPrimaryKey(column.getField());            }            columns.add(column);        }        return columns;    }}