package song.api.studio.controller;import org.apache.commons.fileupload.FileUploadException;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.*;import song.common.net.http.HttpFile;import song.common.result.ActionResult;import song.common.result.UploaderFileResult;import song.common.toolkit.http.HttpFileRequest;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;import java.util.ArrayList;import java.util.List;import java.util.Map;/** * description: * author:          song * createDate:      2018/1/24 */@RestController@RequestMapping("/uploader")public class UploaderController {    protected final static Logger logger = LoggerFactory.getLogger(UploaderController.class);    @PostMapping(value = "upload")    public ActionResult upload(HttpServletRequest request, HttpServletResponse response) {        List<UploaderFileResult> fileResults = new ArrayList<>();        ActionResult result = new ActionResult();        try {            String savePath="D:\\\\";            HttpFileRequest fileRequest = new HttpFileRequest(request);            Map<String, HttpFile> fileMap= fileRequest.batchSave(savePath);            for (Map.Entry<String, HttpFile> entry : fileMap.entrySet()) {                HttpFile httpFile=entry.getValue();                UploaderFileResult uploaderFile = new UploaderFileResult();                uploaderFile.setName(entry.getKey());                uploaderFile.setPath(httpFile.getFilePath());                uploaderFile.setSize(httpFile.getSize());                uploaderFile.setExt(httpFile.getExtension());                uploaderFile.setRealName(httpFile.getFileName());                fileResults.add(uploaderFile);            }        } catch (IOException e) {            result.setSuccess(false);            logger.error("上传文件错误:", e);        } catch (FileUploadException e) {            result.setSuccess(false);            logger.error("上传文件错误:", e);        }        return result;    }    @ResponseBody    @PostMapping(value = "remove")    public ActionResult remove(String id) {        ActionResult result = new ActionResult();        return result;    }}