$.extend(song, {    buildPath: function (url) {        return song.basePath + url;    },    buildUrl: function (url, param) {        if (url.indexOf("?") < 0) {            url += "?";        }        for (var p in param) {            url = url + "&" + p + "=" + param[p];        }        return url.replace("&&", "&").replace("?&", "?");    },    setUrl: function (key, value) {        if (!song.urls) {            song.urls = {}        }        if (!value) {            $.extend(song.urls, key);        } else {            song.urls[key] = value;        }    },    getUrl: function (key, param) {        var href = song.buildPath(song.urls[key]);        if (param) {            return song.buildUrl(href, param);        }        return href;    },    goto: function (key, param) {        var url;        if (!key) {            url = location.href;        } else {            url = song.getUrl(key, param);        }        location.href = url;    },    gotoUrl: function (url) {        if (!url) {            url = location.href;        }        location.href = url;    },    queryString: function (name, isDecode) {        var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");        var r = window.location.search.substr(1).match(reg);        // if (r != null) return escape(r[2]); return null;        if (r != null) {            var p = r[2];            return isDecode === true ? song.decode(p) : p;        }        return "";    }});