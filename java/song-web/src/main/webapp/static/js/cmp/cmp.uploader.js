/** * Created by 王松华 on 2017/8/25. */(function (cmp, $) {    $.extend(cmp, {        acceptType: {            file: {                title: "Files",                extensions: 'gif,jpg,jpeg,bmp,png,zip,7z,rar,tar,gz,doc,docx,ppt,pptx,xls,xlsx,txt,html,htm,pdf,css,js,xml',                mimeTypes: 'image/*,application/*,text/*'            },            image: {                title: "Images",                extensions: "gif,jpg,jpeg,bmp,png",                mimeTypes: "image/*"            },            doc: {                title: "Documents",                extensions: "doc,docx,ppt,pptx,xls,xlsx,txt,pdf",                mimeTypes: "text/*"            },            compress: {                title: "Compress",                extensions: "zip,7z,rar,tar,gz",                mimeTypes: "application/*,text/*"            }        }    });    cmp.uploader = cmp.create({        init: function () {            this.state = "pending";            this.uploadedData=[];            this.render();            this.bindData();            this.create();        },        render: function () {            this.id = song.id("uploader");            var tpl = '<div id="' + this.id + '" class="uploader" style="width:' + this.options.width + ';">\n' +                '    <div class="uploader-btns">\n' +                '        <div class="uploader-select">' + (this.options.selectText || '选择文件') + '</div>\n' +                '        <button class="uploader-btn">开始上传</button>\n' +                '    </div>\n' +                '    <div class="uploader-list">\n' +                '    </div>\n' +                '</div>';            this.el.append(tpl);        },        create: function () {            var btn = this.el.find("button.uploader-btn"),                that = this,                isBtn=this.options.showUploadButton;            if (!isBtn) {                btn.remove();            }            this.uploader = WebUploader.create({                multiple: that.options.multiple,                fileNumLimit: that.options.limitTotal,                formData: that.options.formData || {},                fileSingleSizeLimit: that.options.limitSize * 1024 * 1024,                auto: that.options.auto,                // swf文件路径                swf: cmp.view.rootUrl("static/js/uploader/Uploader.swf"),                // 文件接收服务端。                server:that.options.server || cmp.view.rootUrl('uploader/upload'),                // 选择文件的按钮。可选。                // 内部根据当前运行是创建，可能是input元素，也可能是flash.                pick: this.el.find("div.uploader-select"),                // 不压缩image, 默认如果是jpeg，文件上传前会压缩一把再上传！                resize: false,                accept: cmp.acceptType[that.options.acceptType]                // 只允许选择文件，可选。                //["image/*","video/*","text/*","audio/*","application/*"]            });            this.uploader.on('fileQueued', function (file) {                that.addQueue(file);            });            this.uploader.on('uploadProgress', function (file, percentage) {                var item = $('#' + file.id),                    progress = item.find('span.uploader-progress'),                    state = item.find("span.uploader-state"),                    p = (percentage * 100).toFixed(1) + "%";                state.text('上传中(' + p + ')');                progress.css('width', p);            });            this.uploader.on('uploadSuccess', function (file, result) {                if (cmp.isSuccess(result) && result.files && result.files.length>0){                    var item = $('#' + file.id).attr("data-uploaded","1");                    item.find('span.uploader-state').text('上传成功');                    for (var i = 0; i < result.files.length; i++) {                        var fileItem = result.files[i];                        if (!fileItem.id){                            fileItem.id =file.id;                        }                        that.uploadedData.push(fileItem);                    }                }else{                    errorItem(file);                }            });            this.uploader.on('uploadError', function (file) {                errorItem(file);            });            //上传完成            /*this.uploader.on('uploadComplete', function (file) {            });*/            this.uploader.on('all', function (type) {                if (type === 'startUpload') {                    that.state = 'uploading';                } else if (type === 'stopUpload') {                    that.state = 'paused';                } else if (type === 'uploadFinished') {                    that.state = 'done';                    //执行所有文件上传完成事件                    that.onFinished && that.onFinished.call(that);                }                if (isBtn) {                    if (that.state === 'uploading') {                        btn.text('暂停上传');                    } else {                        btn.text('开始上传');                    }                }            });            if (isBtn) {                btn.on('click', function () {                    if (that.state === 'uploading') {                        that.uploader.stop();                    } else {                        that.uploader.upload();                    }                });            }        },        upload:function (onFinished) {            //绑定上传完成事件            if (onFinished){                this.onFinished=onFinished;            }            if (that.state !='uploading' ){                this.uploader.upload();            }        },        bindData: function () {            var data = this.options.data;            if (!data) {                return;            }            for (var key in data) {                //补充id                if (!data[key].id || data[key].id.length<= 0){                    data[key].id=song.id("uploader-file");                }                this.addFile(data[key])            }        },        addQueue: function (file) {            /*var file = {                    id: "WU_FILE_0",                    ext: "zip",                    name: "bingo-jar.zip",                    type: "application/zip",                    size: 212112,                    statusText: "",                    lastModifiedDate: ""                };*/            var tpl = ['<a class="uploader-item" data-uploaded="0" id="', file.id, '">',                '            <span class="uploader-progress" style="width:0%"></span>',                '            <span class="uploader-filename" title="',file.name,'">', this.truncate(file.name), '</span>',                '            <span class="uploader-state">等待上传...</span>',                '            <span class="uploader-removefile">x</span>',                '        </a>']            this.el.find("div.uploader-list").append(tpl.join(''));            this.bindRemoveEvent(file,"item");        },        addFile: function (file) {            var tpl = ['<div class="uploader-file" data-uploaded="1" id="', file.id, '">',                '            <span class="uploader-filename" title="',file.name,'">', this.truncate(file.name), '</span>',                '            <span class="uploader-removefile">x</span>',                '        </div>'];            this.el.find("div.uploader-list").append(tpl.join(''));            this.bindRemoveEvent(file,"file");        },        bindRemoveEvent:function (file,type) {            var item=$("#"+file.id),                that=this;            item.find("span.uploader-removefile").click(function (e) {                that.removeFile(file,type);            });        },        removeFile: function (file,type) {            //提示是否删除确认，如果未上传，则不提示直接删除            var item=$("#"+file.id),                that=this,                status=item.attr("data-uploaded");            if (status && status=="1"){                cmp.confirm(cmp.text.confirmUploadFile, function () {                    that.removeFileItem(item, file, type);                });            }else{                that.removeFileItem(item, file, type);            }        },        removeFileItem:function (item,file,type) {            //删除服务器文件            /*            var url = cmp.view.rootUrl("uploader/remove"),                params = {id: id};            cmp.postAjax(url, params, function (result) {                //删除文件记录【卸载事件，移除dom，清除数据】            });*/            //删除ui和上传数据            if (type =="file"){                var data=this.options.data;                for (var i = 0; i < data.length; i++) {                    if (data[i].id==file.id){                        Array.remove(data, i);                        break;                    }                }            }else if (type =="item"){                this.uploader.removeFile(file.id,true);                for (var i = 0; i < this.uploadedData.length; i++) {                    if (this.uploadedData[i].id==file.id){                        Array.remove(this.uploadedData, i);                    }                }            }            item.find("span.uploader-removefile").unbind("click");            item.unbind().remove();        },        getData: function () {            return this.uploadedData.concat(this.options.data);        },        clear:function () {            this.uploader.reset();            this.el.find("a.uploader-item").remove();            this.uploadedData=[];        },        truncate:function (name) {            var trun=this.options.truncate;            return trun ? name.truncate(trun) : name;        }    });    function errorItem(file) {        var item = $('#' + file.id);        item.addClass("uploader-error");        item.find('span.uploader-state').text('上传失败');        item.find("span.uploader-progress").addClass("uploader-error");    }    function convertFile(file) {        //将js对象转为object对象        return {            id: file.id,            ext: file.ext,            name: file.name,            type: file.type,            size: file.size        };    }    //默认配置    $.extend(cmp.uploader, {        defaults: {            truncate:10,            data: [],            multiple: true,            auto: false,            showUploadButton:true,            limitTotal: 1,            limitSize: 15,     //限制单个文件上传大小，单位MB            acceptType: "file"        }    })})(window.cmp, window.jQuery);